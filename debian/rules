#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1

kernel_abi=4.9.0-8
jenkins_dir=build_keystore/boot-protector
key_path=/var/lib/jenkins/$(jenkins_dir)
target_dir=/debian/gooroom-boot-protector
build_dir=$(CURDIR)

%:
	dh $@

override_dh_auto_build:
	# grub.cfg
	cp $(build_dir)/data/grub.cfg $(build_dir)/grub.cfg
	cp $(build_dir)/data/grub.cfg.ima $(build_dir)/grub.cfg.ima

	# import keys
	gpg --homedir=$(build_dir) --allow-secret-key-import --import $(key_path)/gooroom-1.0-secret-key.gpg

	set -e ; \
	if [ -e $(key_path) ]; then \
		./sign_gbp_on_build.sh $(key_path); \
	else \
		./sign_gbp_on_build.sh; \
	fi

	# cp kernel and initrd.img
	cp $(key_path)/vmlinuz-$(kernel_abi)-amd64 $(build_dir)/vmlinuz-$(kernel_abi)-amd64
	cp $(key_path)/initrd.img-$(kernel_abi)-amd64 $(build_dir)/initrd.img-$(kernel_abi)-amd64
	cp $(key_path)/initrd.img-$(kernel_abi)-amd64-recovery \
	   $(build_dir)/initrd.img-$(kernel_abi)-amd64-recovery

	# gpg signing
	gpg --homedir=$(build_dir) -v --digest-algo sha256 --detach-sign $(build_dir)/vmlinuz-$(kernel_abi)-amd64
	gpg --homedir=$(build_dir) -v --digest-algo sha256 --detach-sign $(build_dir)/initrd.img-$(kernel_abi)-amd64
	gpg --homedir=$(build_dir) -v --digest-algo sha256 --detach-sign $(build_dir)/initrd.img-$(kernel_abi)-amd64-recovery

	gpg --homedir=$(build_dir) -v --digest-algo sha256 --detach-sign $(build_dir)/grub.cfg
	gpg --homedir=$(build_dir) -v --digest-algo sha256 --detach-sign $(build_dir)/grub.cfg.ima

	# create db.sig from db.auth
	dd bs=1 skip=1425 if=$(key_path)/db.auth of=$(build_dir)/tmp_dbdata
	gpg --homedir=$(build_dir) -v --output $(build_dir)/db.sig --detach-sign $(build_dir)/tmp_dbdata
	rm $(build_dir)/tmp_dbdata

override_dh_install:
	dh_install

	mkdir -p $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# grub.cfg (ima=off)
	cp $(build_dir)/grub.cfg $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(build_dir)/grub.cfg.sig $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# grub.cfg.ima (ima_appraise=enforce)
	cp $(build_dir)/grub.cfg.ima $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(build_dir)/grub.cfg.ima.sig $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# gbp-daemon
	cp $(build_dir)/data/gbp-daemon $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# auth key
	cp $(key_path)/PK.auth $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(key_path)/KEK.auth $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(key_path)/db.auth $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# DER format key
	cp $(key_path)/PK.cer $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(key_path)/KEK.cer $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(key_path)/db.cer $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# db.sig
	cp $(build_dir)/db.sig $(key_path)/
	cp $(build_dir)/db.sig $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# grubx64.efi
	cp $(build_dir)/grubx64.efi $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# kernel and initrd.img
	cp $(build_dir)/vmlinuz-$(kernel_abi)-amd64.sig \
	   $(key_path)/
	cp $(build_dir)/vmlinuz-$(kernel_abi)-amd64.sig \
	   $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	cp $(build_dir)/initrd.img-$(kernel_abi)-amd64 \
	   $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(build_dir)/initrd.img-$(kernel_abi)-amd64.sig $(key_path)/
	cp $(build_dir)/initrd.img-$(kernel_abi)-amd64.sig \
	   $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	cp $(build_dir)/initrd.img-$(kernel_abi)-amd64-recovery \
	   $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/
	cp $(build_dir)/initrd.img-$(kernel_abi)-amd64-recovery.sig $(key_path)/
	cp $(build_dir)/initrd.img-$(kernel_abi)-amd64-recovery.sig \
	   $(build_dir)$(target_dir)/usr/share/gooroom/security/gooroom-boot-protector/

	# backup db.key and db.crt
	if [ ! -e $(key_path)/db.key -o ! -e $(key_path)/db.crt ]; then \
		cp $(build_dir)/db.key $(key_path)/ ; \
		cp $(build_dir)/db.crt $(key_path)/ ; \
	fi
