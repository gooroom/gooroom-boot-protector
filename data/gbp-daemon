#!/bin/bash
### BEGIN INIT INFO
# Provides:          gbp-daemon
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Gooroom Boot Protector service
# Description:       Gooroom Boot Protector protects kernel and drivers during boot sequence.
### END INIT INFO

set -e

SIG_PATH="/usr/share/gooroom/security/gooroom-boot-protector/db.sig"
TEMP_DB_PATH="/tmp/temp_db_$$"
SERVICE_NAME="gbp-daemon"
SERVICE_PATH="/usr/share/gooroom/security/gooroom-boot-protector/$SERVICE_NAME"
TAG_NAME="GBP"

OPTIONS=""
MODULES=""

# Get lsb functions
. /lib/lsb/init-functions
ret_value_of_check=0

# Write the syslog message
#  $1 - Message
#  $2 - Error code
#  $3 - Priority
out_log()
{
    /usr/bin/python3 -c "from systemd import journal;journal.send('$TAG_NAME: $1', SYSLOG_IDENTIFIER='$SERVICE_NAME', GRMCODE='$2', PRIORITY=$3)"
}

# Check status of security service
check() {
	# Check signature file.
	if [ ! -f $SIG_PATH ]; then
		log_action_msg "$TAG_NAME:" "$SERVICE_NAME inactive"
		ret_value_of_check=-1
		return 0
	fi

	# Check UEFI secure boot flag.
	sb_file=$(find /sys/firmware/efi/efivars -name 'SecureBoot\-*')
	sb_enabled=$(tail --byte=1 $sb_file | od -An -t u1)

	if [ $sb_enabled -eq 0 ]; then
		log_action_msg "$TAG_NAME:" "$SERVICE_NAME inactive"
		ret_value_of_check=-1
		return 0
	fi

	# Check UEFI secure boot DB key.
	dbdata_file=$(find /sys/firmware/efi/efivars -name 'db\-*')

	if [ ! -f $dbdata_file ]; then
		log_action_msg "$TAG_NAME:" "$SERVICE_NAME inactive"
		ret_value_of_check=-1
		return 0
	fi

	log_action_msg "$TAG_NAME:" "$SERVICE_NAME active"
	ret_value_of_check=0

	## Skip first 4 bytes to compare a DB key.
	#dd if=$dbdata_file bs=1 skip=4 > $TEMP_DB_PATH 2>/dev/null
	#(set +e; gpg --verify $SIG_PATH $TEMP_DB_PATH 2>/dev/null)
	#if [ $? -eq 0 ]; then
	#	log_action_msg "$TAG_NAME:" "$SERVICE_NAME active"
	#	ret_value_of_check="0"
	#else
	#	log_action_msg "$TAG_NAME:" "$SERVICE_NAME inactive"
	#	ret_value_of_check="-1"
	#fi

	# Delete DB key.
	#rm $TEMP_DB_PATH

	return 0
}

# Boot protector service main
case "$1" in
	start)
		log_daemon_msg "$TAG_NAME" "Start Gooroom Boot Protector service"
		log_end_msg 0
		check

        if [ $ret_value_of_check -eq 0 ]; then
            out_log "started successfully" "010001" 6
        else
            out_log "failed to start" "010003" 3
        fi
	;;

	stop)
		log_daemon_msg "$TAG_NAME" "Stop Gooroom Boot Protector service"
		log_end_msg 0

		out_log "stoped successfully" "010002" 6
	;;

	enable-autostart)
		log_action_msg "$TAG_NAME" "Enabling autostart"
		update-rc.d $SERVICE_NAME remove
		cp $SERVICE_PATH /etc/init.d/
		update-rc.d $SERVICE_NAME defaults
	;;

	disable-autostart)
		log_action_msg "$TAG_NAME" "Disabling autostart"
		update-rc.d boot-protector remove
	;;

	check)
		check
	;;

	*)
		log_action_msg "Usage: $0 {start|stop|enable-autostart|disable-autostart|check}"
		exit 1
	;;
esac

exit 0
